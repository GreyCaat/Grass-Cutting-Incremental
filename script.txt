getgenv().ToggleAntiAfk = false

-----------------------------------------------------------------------------------------------------------------------
--AntiAfk
local ChangeHistoryService = game:GetService("ChangeHistoryService")
local VU = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
    if ToggleAntiAfk == true then
        VU:CaptureController()
        VU:ClickButton2(Vector2.new())
    end
end)

-----------------------------------------------------------------------------------------------------------------------
--Ui Lib

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/GreyCaat/GC-Library/main/Lib.txt", true))()


local main = library:CreateMain("Grass Cutting Incremental", "also me hello")


local AutoStuff = main:CreateTab("Auto-Stuff")

local UpgradeStuff = main:CreateTab("Upgrade-Stuff")

local misc = main:CreateTab("Misc.")


local GrassLoop;
local FarmGrass = AutoStuff:CreateToggle("Collect Grass", function(state)
    if state then
        local mod = require(game:GetService("ReplicatedStorage").EarnGrass)

        GrassLoop = game:GetService("RunService").Heartbeat:Connect(function()
            for _, v in pairs(game:GetService("Workspace").GrassObjects:GetChildren()) do
                if v.Identifier.Value ~= "magic" then
                    mod.collect(v, false)
                end
            end
        end)
    else
        if GrassLoop then
            GrassLoop:Disconnect()
        end
    end
end)


local PrestigeState = false
local AutoPrestige = AutoStuff:CreateToggle("Auto Prestige", function(state)
    if state then
        PrestigeState = true
        while PrestigeState == true do
            wait(3)
            local modscript = require(game:GetService("ReplicatedStorage").Resets)
            modscript.Prestige()
        end
    else
        PrestigeState = false
    end
end)


local CrystallizeState = false
local AutoCrystallize = AutoStuff:CreateToggle("Auto Crystallize", function(state)
    if state then
        CrystallizeState = true
        while CrystallizeState == true do
            wait(3)
            local modscript = require(game:GetService("ReplicatedStorage").Resets)
            modscript.Crystallize()
        end
    else
        CrystallizeState = false
    end
end)

----------------------------------------------------------------------

--This will ban, will still keep it here tho if anyone wants to use it

--[[
local textClick = UpgradeStuff:CreateLabel("Clicking on a Upgrade will max it out")

local ClickUpgradeState = false
local connections = {}
local ClickMaxUpgrade = UpgradeStuff:CreateToggle("Click Max Upgrade", function(state)
    if state then
        ClickUpgradeState = true
        local Player = game.Players.LocalPlayer
        for _, v in pairs(Player.PlayerGui:GetDescendants()) do
            if v.Name == "BasicUpgrade" then
                for _, v in pairs(getconnections(v.MouseButton1Click)) do
                    table.insert(connections, v)

                    v:Disable()
                end

                local DownConnection;

                local function disc()
                    DownConnection:Disconnect()
                end

                DownConnection = v.MouseButton1Down:Connect(function()
                    if ClickUpgradeState then
                        v.Variables.Level.Value = tonumber(v.Variables.LevelCap.Value)
                    else
                        disc()
                    end
                end)

                spawn(function()
                    repeat task.wait(0.25) until ClickUpgradeState == false

                    DownConnection:Disconnect()
                end)
            end
        end
    else
        ClickUpgradeState = false

        for _, v in pairs(connections) do
            v:Enable()
        end

        table.clear(connections)
    end
end)

local clickmaxupgradeline = UpgradeStuff:CreateLine()
--]]

----------------------------------------------------------------------

local OpUpgrades = UpgradeStuff:CreateButton("Make Upgrades OP", function()
    local Player = game.Players.LocalPlayer
    for _, v in pairs(Player.PlayerGui:GetDescendants()) do
        if v.Name == "BasicUpgrade" then
            if not string.find(v.Variables.Identifier.Value, "Spd") and not string.find(v.Variables.Identifier.Value, "range") and not string.find(v.Variables.Identifier.Value, "colider") and not string.find(v.Variables.Identifier.Value, "spawn") then
                v.Variables.BonusPerLevel.Value = 9e30
            end
        end
    end
end)

local FreeUpgrades = UpgradeStuff:CreateButton("Free Upgrades", function()
    local Player = game.Players.LocalPlayer
    for _, v in pairs(Player.PlayerGui:GetDescendants()) do
        if v.Name == "BasicUpgrade" then
            v.Variables.CostScaling.Value = 1
            v.Variables.BaseCost.Value = 0

            if v.Variables.Currency.Value == "antigrass" or v.Variables.Currency.Value == "unnaturalgrass" then
            else
                v.Variables.Currency.Value = "grass"
            end
        end
    end
end)

local AntiAfk = misc:CreateToggle("Anti Afk", function(state)
    if state then
        ToggleAntiAfk = true
    else
        ToggleAntiAfk = false
    end
end)